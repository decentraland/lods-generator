name: Test LOD Conversion

on:
  pull_request:
    types: [edited, opened, reopened, synchronize]

jobs:
  build-and-run:
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - lodLevelsToTest: ["500", "3"]
            files: "bafkreictrpcnce5eoink3tdtrm74vgbniho7afl6xoi46lk3iag2u7aju4_3.fbx"
            sizes: "128128"
          - lodLevelsToTest: ["7000;3000;1000;500", "0"]
            files: "bafkreictrpcnce5eoink3tdtrm74vgbniho7afl6xoi46lk3iag2u7aju4_0.fbx bafkreictrpcnce5eoink3tdtrm74vgbniho7afl6xoi46lk3iag2u7aju4_1.fbx bafkreictrpcnce5eoink3tdtrm74vgbniho7afl6xoi46lk3iag2u7aju4_2.fbx bafkreictrpcnce5eoink3tdtrm74vgbniho7afl6xoi46lk3iag2u7aju4_3.fbx"
            sizes: "6210224 631424 219776 128128"
            
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
            
    - name: Checkout NuGet PiXYZ package
      uses: actions/checkout@v2
      with:
        repository: 'decentraland/PiXYZ-NuGetPackage'
        token: ${{ secrets.PAT_NUGET_TOKEN }}
        path: 'PiXYZ-NuGetPackage'  
        lfs: true

    - name: Build license
      run: |
        cd consumer-server && yarn && yarn build-license ${{ secrets.LICENSE_KEY }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Publish with dotnet
      run:  dotnet publish -c Release -r win10-x64 -o ./publish --self-contained true 
      
    - name: Copy manifest builder to publish directory
      run: |
        Copy-Item -Path "${{ github.workspace }}\DCL_PiXYZ\bin\Release\netcoreapp3.1\win10-x64\scene-lod-entities-manifest-builder" -Destination "${{ github.workspace }}\publish\scene-lod-entities-manifest-builder" -Recurse
      shell: pwsh
      
    - name: Copy road coordinates
      run: |
          Copy-Item -Path "${{ github.workspace }}\DCL_PiXYZ\bin\Release\netcoreapp3.1\win10-x64\RoadCoordinates.json" -Destination "${{ github.workspace }}\publish"
      shell: pwsh 

    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk-action@v1.0.0
      with:
        vulkan_version: 1.3.268.0
        optional_components: com.lunarg.vulkan.vma
        install_runtime: true
        cache: true
        destination: ${{ github.workspace }}/vulkan-sdt

    - name: Move Vulkan DLL to output directory
      run: |
        mv ./vulkan-sdt/1.3.268.0/runtime/x64/vulkan-1.dll ./publish/
      shell: bash

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.14.2'

    - name: Run the application
      env:
       PIXYZPRODUCTNAME: ${{ secrets.PIXYZPRODUCTNAME }}
       PIXYZTOKEN: ${{ secrets.PIXYZTOKEN }}
      run: .\publish\DCL_PiXYZ.exe "coords" "5,19" "${{ github.workspace }}\publish\OutputDirectoryPath" "${{ github.workspace }}\publish\scene-lod-entities-manifest-builder" "false" "true" "${{ matrix.lodLevelsToTest[0] }}" "${{ matrix.lodLevelsToTest[1] }}"

    - name: Check Output Files with Size Tolerance in KB
      run: |
        basePath="${GITHUB_WORKSPACE}/publish/OutputDirectoryPath/5,19"
        files=(${{ join(matrix.files, ' ') }})
        sizes=(${{ join(matrix.sizes, ' ') }})
        toleranceB=5000 # 5 KB tolerance
    
        for i in "${!files[@]}"; do
          filePath="$basePath/${files[$i]}"
          if [ ! -f "$filePath" ]; then
            echo "File not found: $filePath"
            exit 1
          fi
    
          fileSizeInBytes=$(stat -c %s "$filePath")
          lowerBoundB=$((${sizes[$i]} - toleranceB))
          upperBoundB=$((${sizes[$i]} + toleranceB))
          if [ "$fileSizeInBytes" -lt "$lowerBoundB" ] || [ "$fileSizeInBytes" -gt "$upperBoundB" ]; then
            echo "File size mismatch for $filePath. Expected: ${sizes[$i]} B (+/- $toleranceB B), Found: $fileSizeInBytes bytes"
            exit 1
          fi
        done
    
        echo "All files exist and are within the acceptable size range."
      shell: bash